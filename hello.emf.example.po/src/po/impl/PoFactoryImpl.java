/** */package po.impl;import org.eclipse.emf.ecore.EClass;import org.eclipse.emf.ecore.EObject;import org.eclipse.emf.ecore.EPackage;import org.eclipse.emf.ecore.impl.EFactoryImpl;import org.eclipse.emf.ecore.plugin.EcorePlugin;import po.*;/** * <!-- begin-user-doc --> * An implementation of the model <b>Factory</b>. * <!-- end-user-doc --> * @generated */public class PoFactoryImpl extends EFactoryImpl implements PoFactory {	/**	 * Creates the default factory implementation.	 * <!-- begin-user-doc -->	 * <!-- end-user-doc -->	 * @generated	 */	public static PoFactory init() {		try {			PoFactory thePoFactory = (PoFactory)EPackage.Registry.INSTANCE.getEFactory("http://www.example.com/SimplePO"); 			if (thePoFactory != null) {				return thePoFactory;			}		}		catch (Exception exception) {			EcorePlugin.INSTANCE.log(exception);		}		return new PoFactoryImpl();	}	/**	 * Creates an instance of the factory.	 * <!-- begin-user-doc -->	 * <!-- end-user-doc -->	 * @generated	 */	public PoFactoryImpl() {		super();	}	/**	 * <!-- begin-user-doc -->	 * <!-- end-user-doc -->	 * @generated	 */	@Override	public EObject create(EClass eClass) {		switch (eClass.getClassifierID()) {			case PoPackage.PURCHASE_ORDER: return createPurchaseOrder();			case PoPackage.ITEM: return createItem();			default:				throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");		}	}	/**	 * <!-- begin-user-doc -->	 * <!-- end-user-doc -->	 * @generated	 */	public PurchaseOrder createPurchaseOrder() {		PurchaseOrderImpl purchaseOrder = new PurchaseOrderImpl();		return purchaseOrder;	}	/**	 * <!-- begin-user-doc -->	 * <!-- end-user-doc -->	 * @generated	 */	public Item createItem() {		ItemImpl item = new ItemImpl();		return item;	}	/**	 * <!-- begin-user-doc -->	 * <!-- end-user-doc -->	 * @generated	 */	public PoPackage getPoPackage() {		return (PoPackage)getEPackage();	}	/**	 * <!-- begin-user-doc -->	 * <!-- end-user-doc -->	 * @deprecated	 * @generated	 */	@Deprecated	public static PoPackage getPackage() {		return PoPackage.eINSTANCE;	}} //PoFactoryImpl